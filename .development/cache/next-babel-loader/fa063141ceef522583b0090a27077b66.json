{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _googleMapsReact = require(\"google-maps-react\");\n\nvar _m = _interopRequireDefault(require(\"./m.png\"));\n\nvar _mapStyling = _interopRequireDefault(require(\"./mapStyling.json\"));\n\nvar _countries = _interopRequireDefault(require(\"../../Library/countries.json\"));\n\nvar _coreJs = require(\"core-js\");\n\nvar _jsxFileName = \"/Users/stanislavohstany/WebApps/DEV/cov19/src/Templates/GoogleMaps/index.js\";\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar __jsx = _react.default.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst defsize = 25;\n\nconst MapContainer = props => {\n  const {\n    context,\n    google\n  } = props;\n  const {\n    store: {\n      geo = false,\n      markers = [],\n      index\n    },\n    setStore\n  } = context || {};\n  const {\n    0: cpos,\n    1: _cpos\n  } = (0, _react.useState)(false);\n  const {\n    0: latlng,\n    1: _latlng\n  } = (0, _react.useState)([\"49.037868\", \"31.904297\"]);\n  const {\n    0: zoom,\n    1: _zoom\n  } = (0, _react.useState)(9);\n  const {\n    0: state,\n    1: _state\n  } = (0, _react.useState)({\n    activeMarker: null\n  });\n  console.log(\"GEO\", zoom, props, google, geo, _countries.default, cpos);\n  (0, _react.useEffect)(() => {\n    if (geo && geo.countryCode) {\n      const gpos = _countries.default.filter(c => c.country_code === geo.countryCode);\n\n      if (gpos.length) {\n        _cpos(gpos[0]);\n\n        _latlng([gpos[0].latlng[0], gpos[0].latlng[1]]);\n\n        _zoom(7);\n      }\n    }\n  }, [geo]);\n  const markerSets = {\n    icon: {\n      url: _m.default,\n      scaledSize: new google.maps.Size(defsize, defsize)\n    }\n  };\n\n  const onMarkerClick = (pp, activeMarker, index) => {\n    console.log(\"mk\", pp, activeMarker, index);\n\n    _latlng([pp.position.lat, pp.position.lng]);\n\n    _zoom(p => 11);\n\n    setStore({\n      index: index\n    }); // activeMarker.animation = pp.google.maps.Animation.BOUNCE;\n    // activeMarker.animating = true;\n    // console.log(\"pp, activeMarker,\", pp, activeMarker);\n\n    _state({\n      activeMarker\n    });\n  };\n\n  const onMapClicked = props => {\n    _state(e => ({\n      activeMarker: null\n    }));\n  };\n\n  const displayMarkers = (0, _react.useCallback)(() => {\n    return markers.map((m, mx) => __jsx(_googleMapsReact.Marker, _extends({\n      labelClass: \"labelc\",\n      onClick: (pp, mr) => onMarkerClick(pp, mr, mx),\n      key: mx,\n      animation: google.maps.Animation.DROP\n    }, markerSets, m, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: void 0\n    })));\n  }, [markers.length >= 0]);\n  return __jsx(_googleMapsReact.Map, _extends({}, _mapStyling.default, {\n    google: google,\n    zoom: zoom,\n    center: {\n      lat: latlng[0],\n      lng: latlng[1]\n    },\n    onClick: onMapClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: void 0\n  }), markers.length && displayMarkers());\n};\n\nvar _default = (0, _googleMapsReact.GoogleApiWrapper)({\n  apiKey: \"AIzaSyA4zKpi3hRchkPewoFrU0h_V4a2ykGrohk\"\n})(MapContainer);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/stanislavohstany/WebApps/DEV/cov19/src/Templates/GoogleMaps/index.js"],"names":["defsize","MapContainer","props","context","google","store","geo","markers","index","setStore","cpos","_cpos","latlng","_latlng","zoom","_zoom","state","_state","activeMarker","console","log","countries","countryCode","gpos","filter","c","country_code","length","markerSets","icon","url","markerImg","scaledSize","maps","Size","onMarkerClick","pp","position","lat","lng","p","onMapClicked","e","displayMarkers","map","m","mx","mr","Animation","DROP","styles","apiKey"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport markerImg from \"./m.png\";\nimport styles from \"./mapStyling.json\";\nimport countries from \"Library/countries.json\";\nimport { _ } from \"core-js\";\n\nconst defsize = 25;\n\nconst MapContainer = props => {\n\tconst { context, google } = props;\n\tconst {\n\t\tstore: { geo = false, markers = [], index },\n\t\tsetStore\n\t} = context || {};\n\n\tconst [cpos, _cpos] = useState(false);\n\n\tconst [latlng, _latlng] = useState([\"49.037868\", \"31.904297\"]);\n\n\tconst [zoom, _zoom] = useState(9);\n\n\tconst [state, _state] = useState({\n\t\tactiveMarker: null\n\t});\n\n\tconsole.log(\"GEO\", zoom, props, google, geo, countries, cpos);\n\n\tuseEffect(() => {\n\t\tif (geo && geo.countryCode) {\n\t\t\tconst gpos = countries.filter(\n\t\t\t\tc => c.country_code === geo.countryCode\n\t\t\t);\n\n\t\t\tif (gpos.length) {\n\t\t\t\t_cpos(gpos[0]);\n\t\t\t\t_latlng([gpos[0].latlng[0], gpos[0].latlng[1]]);\n\t\t\t\t_zoom(7);\n\t\t\t}\n\t\t}\n\t}, [geo]);\n\n\tconst markerSets = {\n\t\ticon: {\n\t\t\turl: markerImg,\n\t\t\tscaledSize: new google.maps.Size(defsize, defsize)\n\t\t}\n\t};\n\n\tconst onMarkerClick = (pp, activeMarker, index) => {\n\t\tconsole.log(\"mk\", pp, activeMarker, index);\n\t\t_latlng([pp.position.lat, pp.position.lng]);\n\t\t_zoom(p => 11);\n\t\tsetStore({ index: index });\n\n\t\t// activeMarker.animation = pp.google.maps.Animation.BOUNCE;\n\t\t// activeMarker.animating = true;\n\t\t// console.log(\"pp, activeMarker,\", pp, activeMarker);\n\n\t\t_state({\n\t\t\tactiveMarker\n\t\t});\n\t};\n\n\tconst onMapClicked = props => {\n\t\t_state(e => ({\n\t\t\tactiveMarker: null\n\t\t}));\n\t};\n\n\tconst displayMarkers = useCallback(() => {\n\t\treturn markers.map((m, mx) => (\n\t\t\t<Marker\n\t\t\t\tlabelClass=\"labelc\"\n\t\t\t\tonClick={(pp, mr) => onMarkerClick(pp, mr, mx)}\n\t\t\t\tkey={mx}\n\t\t\t\tanimation={google.maps.Animation.DROP}\n\t\t\t\t{...markerSets}\n\t\t\t\t{...m}\n\t\t\t/>\n\t\t));\n\t}, [markers.length >= 0]);\n\n\treturn (\n\t\t<Map\n\t\t\t{...styles}\n\t\t\tgoogle={google}\n\t\t\tzoom={zoom}\n\t\t\tcenter={{ lat: latlng[0], lng: latlng[1] }}\n\t\t\tonClick={onMapClicked}>\n\t\t\t{markers.length && displayMarkers()}\n\t\t</Map>\n\t);\n};\n\nexport default GoogleApiWrapper({\n\tapiKey: \"AIzaSyA4zKpi3hRchkPewoFrU0h_V4a2ykGrohk\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"script"}