{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _googleMapsReact = require(\"google-maps-react\");\n\nvar _m = _interopRequireDefault(require(\"./m.png\"));\n\nvar _mapStyling = _interopRequireDefault(require(\"./mapStyling.json\"));\n\nvar _countries = _interopRequireDefault(require(\"../../Library/countries.json\"));\n\nvar _jsxFileName = \"/Users/stanislavohstany/WebApps/DEV/cov19/src/Templates/GoogleMaps/index.js\";\nvar __jsx = _react.default.createElement;\nvar defsize = 25;\nvar defPos = {\n  latlng: [\"49.037868\", \"31.904297\"]\n};\n\nvar MapContainer = function MapContainer(props) {\n  var context = props.context,\n      google = props.google;\n\n  var _ref = context || {},\n      _ref$store = _ref.store,\n      _ref$store$geo = _ref$store.geo,\n      geo = _ref$store$geo === void 0 ? false : _ref$store$geo,\n      _ref$store$markers = _ref$store.markers,\n      markers = _ref$store$markers === void 0 ? [] : _ref$store$markers,\n      index = _ref$store.index,\n      setStore = _ref.setStore;\n\n  var _useState = (0, _react.useState)(defPos),\n      cpos = _useState[0],\n      _cpos = _useState[1];\n\n  var _useState2 = (0, _react.useState)(9),\n      zoom = _useState2[0],\n      _zoom = _useState2[1];\n\n  var _useState3 = (0, _react.useState)({\n    activeMarker: null\n  }),\n      state = _useState3[0],\n      _state = _useState3[1];\n\n  console.log(\"GEO\", props, google, geo, _countries.default, cpos);\n  (0, _react.useEffect)(function () {\n    if (geo && geo.countryCode) {\n      var gpos = _countries.default.filter(function (c) {\n        return c.country_code === geo.countryCode;\n      });\n\n      if (gpos.length) {\n        _cpos(gpos[0]);\n\n        _zoom(7);\n      }\n    }\n  }, [geo]);\n  var markerSets = {\n    icon: {\n      url: _m.default,\n      scaledSize: new google.maps.Size(defsize, defsize)\n    }\n  };\n\n  var onMarkerClick = function onMarkerClick(pp, activeMarker, index) {\n    setStore({\n      index: index\n    }); // activeMarker.animation = pp.google.maps.Animation.BOUNCE;\n    // activeMarker.animating = true;\n    // console.log(\"pp, activeMarker,\", pp, activeMarker);\n\n    _state({\n      activeMarker: activeMarker\n    });\n  };\n\n  var onMapClicked = function onMapClicked(props) {\n    _state(function (e) {\n      return {\n        activeMarker: null\n      };\n    });\n  };\n\n  var displayMarkers = (0, _react.useCallback)(function () {\n    return markers.map(function (m, mx) {\n      return __jsx(_googleMapsReact.Marker, (0, _extends2.default)({\n        labelClass: \"labelc\",\n        onClick: function onClick(pp, mr) {\n          return onMarkerClick(pp, mr, mx);\n        },\n        key: mx,\n        animation: google.maps.Animation.DROP\n      }, markerSets, m, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    });\n  }, [markers.length >= 0]);\n  return __jsx(_googleMapsReact.Map, (0, _extends2.default)({}, _mapStyling.default, {\n    google: google,\n    zoom: zoom,\n    center: {\n      lat: cpos.latlng[0],\n      lng: cpos.latlng[1]\n    },\n    onClick: onMapClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), markers.length && displayMarkers());\n};\n\nvar _default = (0, _googleMapsReact.GoogleApiWrapper)({\n  apiKey: \"AIzaSyA4zKpi3hRchkPewoFrU0h_V4a2ykGrohk\"\n})(MapContainer);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/stanislavohstany/WebApps/DEV/cov19/src/Templates/GoogleMaps/index.js"],"names":["defsize","defPos","latlng","MapContainer","props","context","google","store","geo","markers","index","setStore","cpos","_cpos","zoom","_zoom","activeMarker","state","_state","console","log","countries","countryCode","gpos","filter","c","country_code","length","markerSets","icon","url","markerImg","scaledSize","maps","Size","onMarkerClick","pp","onMapClicked","e","displayMarkers","map","m","mx","mr","Animation","DROP","styles","lat","lng","apiKey"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport markerImg from \"./m.png\";\nimport styles from \"./mapStyling.json\";\nimport countries from \"Library/countries.json\";\n\nconst defsize = 25;\nconst defPos = {\n\tlatlng: [\"49.037868\", \"31.904297\"]\n};\n\nconst MapContainer = props => {\n\tconst { context, google } = props;\n\tconst {\n\t\tstore: { geo = false, markers = [], index },\n\t\tsetStore\n\t} = context || {};\n\n\tconst [cpos, _cpos] = useState(defPos);\n\n\tconst [zoom, _zoom] = useState(9);\n\n\tconst [state, _state] = useState({\n\t\tactiveMarker: null\n\t});\n\n\tconsole.log(\"GEO\", props, google, geo, countries, cpos);\n\n\tuseEffect(() => {\n\t\tif (geo && geo.countryCode) {\n\t\t\tconst gpos = countries.filter(\n\t\t\t\tc => c.country_code === geo.countryCode\n\t\t\t);\n\n\t\t\tif (gpos.length) {\n\t\t\t\t_cpos(gpos[0]);\n\t\t\t\t_zoom(7);\n\t\t\t}\n\t\t}\n\t}, [geo]);\n\n\tconst markerSets = {\n\t\ticon: {\n\t\t\turl: markerImg,\n\t\t\tscaledSize: new google.maps.Size(defsize, defsize)\n\t\t}\n\t};\n\n\tconst onMarkerClick = (pp, activeMarker, index) => {\n\t\tsetStore({ index: index });\n\n\t\t// activeMarker.animation = pp.google.maps.Animation.BOUNCE;\n\t\t// activeMarker.animating = true;\n\t\t// console.log(\"pp, activeMarker,\", pp, activeMarker);\n\n\t\t_state({\n\t\t\tactiveMarker\n\t\t});\n\t};\n\n\tconst onMapClicked = props => {\n\t\t_state(e => ({\n\t\t\tactiveMarker: null\n\t\t}));\n\t};\n\n\tconst displayMarkers = useCallback(() => {\n\t\treturn markers.map((m, mx) => (\n\t\t\t<Marker\n\t\t\t\tlabelClass=\"labelc\"\n\t\t\t\tonClick={(pp, mr) => onMarkerClick(pp, mr, mx)}\n\t\t\t\tkey={mx}\n\t\t\t\tanimation={google.maps.Animation.DROP}\n\t\t\t\t{...markerSets}\n\t\t\t\t{...m}\n\t\t\t/>\n\t\t));\n\t}, [markers.length >= 0]);\n\n\treturn (\n\t\t<Map\n\t\t\t{...styles}\n\t\t\tgoogle={google}\n\t\t\tzoom={zoom}\n\t\t\tcenter={{ lat: cpos.latlng[0], lng: cpos.latlng[1] }}\n\t\t\tonClick={onMapClicked}>\n\t\t\t{markers.length && displayMarkers()}\n\t\t</Map>\n\t);\n};\n\nexport default GoogleApiWrapper({\n\tapiKey: \"AIzaSyA4zKpi3hRchkPewoFrU0h_V4a2ykGrohk\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"script"}