{"version":3,"file":"static/webpack/static/development/pages/_app.js.4d6cbb7081b496bed693.hot-update.js","sources":["webpack:///./src/Context/index.js"],"sourcesContent":["import React, { createContext, useEffect, useReducer, useState } from \"react\";\nimport bpis from \"api\";\n\nimport { withRouter } from \"next/router\";\n\nimport { root_store_reducer, root_store_initial_state } from \"./reducers\";\n\nimport { rootActions } from \"./actions\";\n\nconst w = { device: \"pc\" };\n\nif (typeof window !== \"undefined\") {\n\tw.device = window.innerWidth > 768 ? \"pc\" : \"mobile\";\n\tdocument.body.classList.add(w.device);\n}\n\n// common global context\nconst RootContext = createContext({});\n\nconst finalizeStore = async (\n\t{ store, actions, reducer },\n\tsingle,\n\t{ loginStatus, logout },\n\tsignal\n) => {\n\tconst { reduce } = single || {};\n\n\tif (!reduce) return false;\n\n\tconst actionExist = {\n\t\t...(actions[reduce] || {}),\n\t\t...single\n\t};\n\n\tif (!actionExist.action || actionExist.api === false) {\n\t\treturn reducer(store, {\n\t\t\treduce,\n\t\t\tdata: actionExist.data || false\n\t\t});\n\t}\n\n\treturn reducer(\n\t\tstore,\n\t\t{\n\t\t\treduce,\n\t\t\tdata: await bpis(actionExist, signal, {\n\t\t\t\tlogout,\n\t\t\t\tloginStatus\n\t\t\t})\n\t\t},\n\t\tactionExist\n\t);\n};\n\nconst setStoreReducer = (state, data) => {\n\treturn { ...state, ...data };\n};\n\n// Context as global app store\nexport const RootProvider = withRouter(props => {\n\tconst { loginStatus, logout, children } = props;\n\n\tconst [store, setStore] = useReducer(\n\t\tsetStoreReducer,\n\t\troot_store_initial_state\n\t);\n\n\tconst actioner = async apiParams => {\n\t\tconst updater = { api: apiParams, toState: {}, signals: [] };\n\t\t/** ARRAY:   if type is array we are able to make several\n\t\t *           api request, reduce them, and then assign all data at once to the state\n\t\t *  OBJECT:  single api request, reduce and state setter\n\t\t */\n\t\tif (updater.api instanceof Array) {\n\t\t\tupdater.toState = Object.assign(\n\t\t\t\t{},\n\t\t\t\t(\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tupdater.api.map(async (single, x) => {\n\t\t\t\t\t\t\tupdater.signals[x] = new window.AbortController();\n\t\t\t\t\t\t\treturn await finalizeStore(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\t\t\tactions: rootActions,\n\t\t\t\t\t\t\t\t\treducer: root_store_reducer\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsingle,\n\t\t\t\t\t\t\t\t{ loginStatus, logout },\n\t\t\t\t\t\t\t\tupdater.signals[x]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t).reduce((p, n) => Object.assign({}, p, n), {})\n\t\t\t);\n\t\t} else {\n\t\t\tupdater.signals[0] = new window.AbortController();\n\t\t\tupdater.toState = await finalizeStore(\n\t\t\t\t{ store, actions: rootActions, reducer: root_store_reducer },\n\t\t\t\tapiParams,\n\t\t\t\t{ loginStatus, logout },\n\t\t\t\tupdater.signals[0]\n\t\t\t);\n\t\t}\n\n\t\tif (updater.toState) {\n\t\t\tif (apiParams.set !== false) {\n\t\t\t\tsetStore(updater.toState);\n\t\t\t\treturn updater.toState;\n\t\t\t} else {\n\t\t\t\treturn { data: updater.toState, set: setStore };\n\t\t\t}\n\t\t}\n\n\t\treturn function clean() {\n\t\t\tupdater.signals.map(s => {\n\t\t\t\ts.abort();\n\t\t\t});\n\t\t};\n\t};\n\n\tconst [device, _device] = useState(\"pc\");\n\n\tconst getScreenState = e => {\n\t\te.preventDefault();\n\t\t_device(s => {\n\t\t\tconst canSet =\n\t\t\t\ts === \"mobile\" && window.innerWidth > 768\n\t\t\t\t\t? \"pc\"\n\t\t\t\t\t: s === \"pc\" && window.innerWidth <= 768\n\t\t\t\t\t? \"mobile\"\n\t\t\t\t\t: false;\n\t\t\tif (canSet) {\n\t\t\t\tdocument.body.classList.remove(\n\t\t\t\t\tcanSet === \"mobile\" ? \"pc\" : \"mobile\"\n\t\t\t\t);\n\t\t\t\tdocument.body.classList.add(canSet);\n\t\t\t}\n\t\t\treturn canSet || s;\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tconst dev = window.innerWidth > 768 ? \"pc\" : \"mobile\";\n\t\t\t_device(dev);\n\t\t\tdocument.body.classList.add(dev);\n\t\t\twindow.addEventListener(\"resize\", getScreenState);\n\t\t}\n\n\t\tfetch(\"http://www.geoplugin.net/javascript.gp\")\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(\"res\", res);\n\t\t\t\treturn res.text();\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\t// const ff = new Function(res);\n\t\t\t\tconsole.log(\"res2\", ff, eval(res));\n\t\t\t});\n\t}, []);\n\n\tconst api = (data, signal = false) => {\n\t\treturn bpis(data, signal, {\n\t\t\tlogout,\n\t\t\tloginStatus: state.loginStatus\n\t\t});\n\t};\n\n\treturn (\n\t\t<RootContext.Provider\n\t\t\tvalue={{\n\t\t\t\tstore,\n\t\t\t\tactioner,\n\t\t\t\tdevice,\n\t\t\t\tsetStore,\n\t\t\t\tapi\n\t\t\t}}>\n\t\t\t{children}\n\t\t</RootContext.Provider>\n\t);\n});\n\nexport default RootContext;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AADA;AAiBA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AAFA;AACA;AA3BA;AAAA;AAAA;AAyBA;AACA;AA1BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AAAA;AAyBA;AAAA;AACA;AA1BA;AAAA;AAOA;AAPA;AAAA;AACA;AADA;AA4BA;AA5BA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAjCA;AA6BA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsCA;AAvCA;AACA;AADA;AAAA;AA0CA;AAAA;AAAA;AACA;AA3CA;AAAA;AA+CA;AACA;AACA;AACA;AACA;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AACA;AA8DA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;AAEA;;;;;A","sourceRoot":""}